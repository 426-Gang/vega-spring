# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master
- dev

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  ${{ if eq(variables['Build.SourceBranchName'], 'master') }}:
    dockerRegistryServiceConnection: 'e9632e8d-c2a8-466c-a51d-c3ea16fa6554'
    containerRegistry: 'vegaabsolute.azurecr.io'
  ${{ else }} :
    dockerRegistryServiceConnection: '5043ee8c-6dea-4efd-b1cd-d24fa26fdc3c'
    containerRegistry: 'vegadevregistry.azurecr.io'
  imageRepository: 'vegaspring'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:

- stage: Analyze_Test
  displayName: Run SonarQube and test
  jobs:
  - job: Analyze
    displayName: Analyze
    pool:
      vmImage: $(vmImageName)
    steps:
    
    - task: SonarQubePrepare@5
      inputs:
        SonarQube: 'SonarQUbe'
        scannerMode: 'Other'

    - task: Maven@3
      inputs:
        mavenPomFile: 'pom.xml'
        goals: 'clean package'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        javaHomeOption: 'JDKVersion'
        mavenVersionOption: 'Default'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        ${{ if eq(variables['Build.SourceBranchName'], 'master') }}:
          sonarQubeRunAnalysis: true
        ${{ else }} :
          sonarQubeRunAnalysis: false
        sqMavenPluginVersionChoice: 'latest'
    - task: SonarQubePublish@5
      condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
      inputs:
        pollingTimeoutSec: '300'
        
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
          latest
    - task: AzureRmWebAppDeployment@4
      condition: eq(variables['Build.SourceBranchName'], 'dev')
      displayName: Deploy dev vega-spring
      inputs:
        azureSubscription: 'Azure for Students (63ecfa31-9ab6-4ab7-8c8d-dd55767d7a40)'
        appType: webAppContainer
        WebAppName: 'vega-spring-dev'
        DockerNamespace: vegadevregistry.azurecr.io
        DockerRepository: vegaspring
        DockerImageTag: latest
        AppSettings: '-SPRING_DATASOURCE_URL jdbc:mysql://vegadevdb.mysql.database.azure.com:3306/venus?useSSL=true -SPRING_DATASOURCE_USERNAME vegaadmin -SPRING_DATASOURCE_PASSWORD SQLpass426 -SPRING_PROFILES_ACTIVE prod'